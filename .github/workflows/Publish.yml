name: Publish to PyPI.org

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Verify tag matches version
        if: github.event_name == 'release'
        run: |
          TAG="${GITHUB_REF_NAME:-${{ github.event.release.tag_name }}}"
          TAG=${TAG#v}
          VERSION=$(python - <<'PY'
          from pathlib import Path
          import re
          init = Path('brainmass/__init__.py').read_text(encoding='utf-8')
          m = re.search(r"__version__\s*=\s*['\"]([^'\"]+)['\"]", init)
          print(m.group(1) if m else '')
          PY
          )
          echo "Release tag: $TAG"
          echo "Package version: $VERSION"
          if [ -z "$VERSION" ]; then
            echo "Could not determine version from brainmass/__init__.py" >&2
            exit 1
          fi
          if [ "$TAG" != "$VERSION" ]; then
            echo "Tag ($TAG) does not match package version ($VERSION)." >&2
            exit 1
          fi

      - name: Build sdist and wheel
        run: |
          python -m build --sdist --wheel

      - name: Twine check
        run: |
          python -m twine check dist/*

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
